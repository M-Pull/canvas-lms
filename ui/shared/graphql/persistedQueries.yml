GetCourseStudentQuery:
  anonymous_access_allowed: true
  query: >
    query GetCourseStudentQuery($courseId: ID!) {
      legacyNode(_id: $courseId, type: Course) {
        ... on Course {
          name
          submissionStatistics {
            missingSubmissionsCount
            submissionsDueThisWeekCount
          }
          settings {
            showStudentOnlyModuleId
          }
        }
      }
    }
GetModulesStudentQuery:
  anonymous_access_allowed: true
  query: >
    query GetModulesStudentQuery($courseId: ID!, $cursor: String) {
      legacyNode(_id: $courseId, type: Course) {
        ... on Course {
          modulesConnection(first: 100, after: $cursor) {
            edges {
              cursor
              node {
                id
                _id
                name
                position
                published
                unlockAt
                requirementCount
                requireSequentialProgress
                prerequisites {
                  id
                  name
                  type
                }
                completionRequirements {
                  id
                  type
                  minScore
                  minPercentage
                }
                progression {
                  id
                  _id
                  workflowState
                  collapsed
                  completedAt
                  completed
                  locked
                  unlocked
                  started
                  currentPosition
                  requirementsMet {
                    id
                    minPercentage
                    minScore
                    score
                    type
                  }
                  incompleteRequirements {
                    id
                    minPercentage
                    minScore
                    score
                    type
                  }
                }
                submissionStatistics {
                  latestDueAt
                  missingAssignmentCount
                }
              }
            }
            pageInfo {
              hasNextPage
              endCursor
            }
          }
        }
      }
    }
GetModuleItemsStudentQuery:
  anonymous_access_allowed: true
  query: >
    query GetModuleItemsStudentQuery($moduleId: ID!) {
      legacyNode(_id: $moduleId, type: Module) {
        ... on Module {
          moduleItems {
            _id
            id
            url
            indent
            position
            content {
              ... on Assignment {
                _id
                id
                title
                type: __typename
                pointsPossible
                isNewQuiz
                published
                submissionsConnection(filter: {includeUnsubmitted: true}) {
                  nodes {
                    _id
                    cachedDueDate
                    missing
                  }
                }
              }
              ... on Discussion {
                _id
                id
                title
                type: __typename
                lockAt
                todoDate
                discussionType
                published
                replyToEntryRequiredCount
                submissionsConnection(filter: {includeUnsubmitted: true}) {
                  nodes {
                    _id
                    cachedDueDate
                    missing
                  }
                }
                checkpoints {
                  dueAt(applyOverrides: true)
                  name
                  tag
                }
              }
              ... on File {
                _id
                id
                title: displayName
                type: __typename
                contentType
                size
                thumbnailUrl
                url
                published
              }
              ... on Page {
                _id
                id
                title
                published
                type: __typename
              }
              ... on Quiz {
                _id
                id
                title
                type: __typename
                pointsPossible
                published
                submissionsConnection(filter: {includeUnsubmitted: true}) {
                  nodes {
                    _id
                    cachedDueDate
                    missing
                  }
                }
              }
              ... on ExternalUrl {
                title
                type: __typename
                url
                published
                newTab
              }
              ... on ModuleExternalTool {
                title
                type: __typename
                url
                published
              }
              ... on SubHeader {
                title
                published
                type: __typename
              }
            }
          }
        }
      }
    }
# frozen_string_literal: true

#
# Copyright (C) <%= Time.now.utc.year %> - present Instructure, Inc.
#
# This file is part of Canvas.
#
# Canvas is free software: you can redistribute it and/or modify it under
# the terms of the GNU Affero General Public License as published by the Free
# Software Foundation, version 3 of the License.
#
# Canvas is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
# A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
# details.
#
# You should have received a copy of the GNU Affero General Public License along
# with this program. If not, see <http://www.gnu.org/licenses/>.

describe DataFixup::<%= class_name %> do
  specs_require_sharding

  subject(:fixup) { operation_shard.activate { described_class.new } }

  let(:operation_shard) { @shard1 }

  around do |example|
    operation_shard.activate do
      example.run
    end
  end

  before do
    # Make sure to put test data on the same shard as the operation:
    # operation_shard.activate { User.create!(name: "Test User", ...) }

    # Prevent actual sleeps when testing testing
    allow_any_instance_of(described_class).to receive(:wait_between_jobs)
    allow_any_instance_of(described_class).to receive(:wait_between_processing)
  end

  describe "#run" do
    def execute_fixup
      fixup.run
      run_jobs
    end

    it "processes a batch of records" do
      expect { execute_fixup }.to change { true }.to(false)
    end
  end
end
